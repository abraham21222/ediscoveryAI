version: '3.8'

services:
  # LocalStack for AWS service emulation (S3, KMS, SQS, etc.)
  localstack:
    image: localstack/localstack:latest
    container_name: ediscovery-localstack
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # External services port range
    environment:
      - SERVICES=s3,kms,sqs,kinesis,secretsmanager
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - "./localstack_data:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - ediscovery-network

  # PostgreSQL for metadata store (future use)
  postgres:
    image: postgres:15-alpine
    container_name: ediscovery-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=ediscovery
      - POSTGRES_PASSWORD=ediscovery_dev_password
      - POSTGRES_DB=ediscovery_metadata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ediscovery-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ediscovery"]
      interval: 10s
      timeout: 5s
      retries: 5

  # OpenSearch for full-text search (future use)
  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: ediscovery-opensearch
    environment:
      - cluster.name=ediscovery-cluster
      - node.name=ediscovery-node-1
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - DISABLE_SECURITY_PLUGIN=true  # For local dev only
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    networks:
      - ediscovery-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and rate limiting (future use)
  redis:
    image: redis:7-alpine
    container_name: ediscovery-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ediscovery-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

networks:
  ediscovery-network:
    driver: bridge

volumes:
  postgres_data:
  opensearch_data:
  redis_data:

